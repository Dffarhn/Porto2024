---
import Layout from "../../layouts/LayoutHome.astro";
import { GetAllTasks, type TaskData, type TaskResponse } from "../../utils/tasks/GetAllTasks"

const accessToken = Astro.cookies.get("access_token")?.value;

console.log(accessToken)

// Fetch tasks on page load
let tasks: TaskResponse = {
  data: [],
  statusCode: 200
};
if (!accessToken) {
  return Astro.redirect('/auth/login');
} else {
  tasks = await GetAllTasks(accessToken);
}
---

<Layout title="Tasks">
  <div class="todo-container">
    <header>
      <h1>To-Do List</h1>
      <button id="addTaskButton">Add Task</button>
    </header>

    <ul class="task-list">
      {tasks.data && tasks.data.length > 0 ? (
        tasks.data.map((task: TaskData) => (
          <li>
            <input type="checkbox" id={task.id} />
            <label for={task.id}>{task.isi_task}</label>
            <button class="edit-btn">Edit</button>
            <button class="delete-btn">Delete</button>
          </li>
        ))
      ) : (
        <li>No tasks available</li>
      )}
    </ul>

    <!-- Add Task Modal -->
    <div id="taskModal" class="modal">
      <div class="modal-content">
        <h2>Add New Task</h2>
        <form>
          <input type="text" placeholder="Task Name" required />
          <button type="submit">Add</button>
          <button type="button" id="cancelButton">Cancel</button>
        </form>
      </div>
    </div>
  </div> 

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const addTaskButton = document.getElementById('addTaskButton') as any;
      const taskModal = document.getElementById('taskModal') as any;
      const cancelButton = document.getElementById('cancelButton') as any;

      addTaskButton.addEventListener('click', () => {
        taskModal.classList.add('active');
      });

      cancelButton.addEventListener('click', () => {
        taskModal.classList.remove('active');
      });
    });
  </script>
</Layout>

<style>
  .todo-container {

    max-width: 1500px;
    padding: 0.5rem 1rem;
    background: #f9f9f9;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    font-family: 'Arial', sans-serif;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid #eee;
  }

  header h1 {
    font-size: 2rem;
    color: #333;
    margin: 0;
  }

  #addTaskButton {
    padding: 0.7rem 1.5rem;
    font-size: 1.2rem;
    background: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background 0.3s ease;
  }

  #addTaskButton:hover {
    background: #0056b3;
  }

  .task-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .task-list li {
    display: flex;
    align-items: center;
    padding: 0.7rem;
    margin-bottom: 0.5rem;
    background: #fff;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    position: relative;
  }

  .task-list input[type="checkbox"] {
    margin-right: 1rem;
  }

  .task-list label {
    flex: 1;
    font-size: 1rem;
    color: #333;
  }

  .edit-btn,
  .delete-btn {
    margin-left: 0.5rem;
    padding: 0.5rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background 0.3s ease;
    font-size: 0.9rem;
  }

  .edit-btn {
    background: #28a745;
    color: #fff;
  }

  .edit-btn:hover {
    background: #218838;
  }

  .delete-btn {
    background: #dc3545;
    color: #fff;
  }

  .delete-btn:hover {
    background: #c82333;
  }

  .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
  }

  .modal.active {
    display: flex;
  }

  .modal-content {
    background: #fff;
    padding: 2rem;
    border-radius: 8px;
    width: 100%;
    max-width: 400px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    position: relative;
  }

  .modal-content h2 {
    margin-top: 0;
    font-size: 1.5rem;
    color: #333;
  }

  .modal-content form {
    display: flex;
    flex-direction: column;
  }

  .modal-content input {
    padding: 0.7rem;
    margin-bottom: 1rem;
    border: 1px solid #ddd;
    border-radius: 5px;
  }

  .modal-content button {
    padding: 0.7rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background 0.3s ease;
    font-size: 1rem;
  }

  .modal-content button[type="submit"] {
    background: #007bff;
    color: #fff;
  }

  .modal-content button[type="submit"]:hover {
    background: #0056b3;
  }

  .modal-content button[type="button"] {
    background: #6c757d;
    color: #fff;
  }

  .modal-content button[type="button"]:hover {
    background: #5a6268;
  }
</style>
